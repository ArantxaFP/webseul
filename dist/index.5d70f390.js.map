{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,KAE5C,IAAI,EAAc,OAAO,QAAQ,CAAC,QAAQ,CAG1C,SAAS,EAAgB,CAAI,EAC3B,GAAK,EAML,IAAK,IAFD,EAAQ,EAAK,oBAAoB,CAAC,KAE7B,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACrC,IAAI,EAAW,IAAI,IAAI,CAAK,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,CAG1C,CAAA,IAAgB,GAAY,EAAY,QAAQ,CAAC,EAAA,GACnD,CAAK,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,UAE3B,CACF,CAGA,IAAI,EAAe,SAAS,cAAc,CAAC,kBACvC,EAAW,SAAS,cAAc,CAAC,aAGnC,EACF,EAAgB,GACP,GACT,EAAgB,GAIlB,IAAI,EAAa,SAAS,cAAc,CAAC,eACrC,GACF,EAAgB,GAIlB,SAAS,gBAAgB,CAAC,mBAAmB,OAAO,CAAC,SAAU,CAAM,EACnE,EAAO,gBAAgB,CAAC,QAAS,SAAU,CAAC,EAC1C,EAAE,cAAc,GAChB,IAAI,EAAU,IAAI,CAAC,kBAAkB,CAGrC,SAAS,gBAAgB,CAAC,oBAAoB,OAAO,CAAC,SAAU,CAAW,EACrE,IAAgB,GAClB,EAAY,SAAS,CAAC,MAAM,CAAC,UAEjC,GAGA,EAAQ,SAAS,CAAC,MAAM,CAAC,UAC3B,EACF,GAGA,IAAM,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAc,SAAS,aAAa,CAAC,cACrC,EAAQ,SAAS,aAAa,CAAC,CAAC,CAAC,EAAE,EAAe,iBAAmB,YAAY,GAAG,CAAC,EAEvF,GAAc,GAAe,IAC/B,EAAW,gBAAgB,CAAC,QAAS,KACnC,EAAM,SAAS,CAAC,MAAM,CAAC,cACvB,EAAY,KAAK,CAAC,OAAO,CAAG,EAAM,SAAS,CAAC,QAAQ,CAAC,cAAgB,QAAU,MACjF,GAEA,EAAY,gBAAgB,CAAC,QAAS,KACpC,EAAM,SAAS,CAAC,MAAM,CAAC,cACvB,EAAY,KAAK,CAAC,OAAO,CAAG,MAC9B,IAIF,IAAM,EAAe,SAAS,cAAc,CAAC,kBACzC,IACF,EAAa,gBAAgB,CAAC,QAAS,KACrC,OAAO,QAAQ,CAAC,CACd,IAAK,EACL,SAAU,QACZ,EACF,GAEA,OAAO,gBAAgB,CAAC,SAAU,KAC5B,OAAO,WAAW,CAAG,IACvB,EAAa,SAAS,CAAC,MAAM,CAAC,UAE9B,EAAa,SAAS,CAAC,GAAG,CAAC,SAE/B,IAIF,IAAM,EAAkB,SAAS,aAAa,CAAC,sBAG3C,GACF,EAAgB,gBAAgB,CAAC,QAAS,AAAC,IACzC,EAAE,cAAc,GAChB,IAAM,EAAS,SAAS,aAAa,CAAC,EAAgB,YAAY,CAAC,SAG/D,GACF,EAAO,cAAc,CAAC,CAAE,SAAU,QAAS,EAE/C,EAEJ","sources":["<anon>","src/assets/js/script.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", ()=>{\n    // Obtener la ruta actual (sin el dominio ni el query string)\n    var currentPath = window.location.pathname;\n    // Función para marcar el enlace actual en el menú\n    function markCurrentLink(menu) {\n        if (!menu) return; // Si el menú no existe, salir de la función\n        var links = menu.getElementsByTagName(\"a\");\n        for(var i = 0; i < links.length; i++){\n            var linkPath = new URL(links[i].href).pathname; // Obtener solo la ruta\n            // Normalizar y comparar las rutas\n            if (currentPath === linkPath || currentPath.endsWith(linkPath)) links[i].classList.add(\"current\");\n        }\n    }\n    // Seleccionar el menú que esté disponible en la página actual\n    var mainMenuHome = document.getElementById(\"main-menu-home\");\n    var mainMenu = document.getElementById(\"main-menu\");\n    // Marcar enlaces actuales en el menú que exista\n    if (mainMenuHome) markCurrentLink(mainMenuHome);\n    else if (mainMenu) markCurrentLink(mainMenu);\n    // Marcar enlaces actuales en el footer (si aplica)\n    var footerMenu = document.getElementById(\"footer-menu\");\n    if (footerMenu) markCurrentLink(footerMenu);\n    // Manejo del submenú desplegable de miembros\n    document.querySelectorAll(\".toggle-submenu\").forEach(function(toggle) {\n        toggle.addEventListener(\"click\", function(e) {\n            e.preventDefault();\n            let submenu = this.nextElementSibling;\n            // Cerrar otros submenús si ya están abiertos\n            document.querySelectorAll(\".submenu.visible\").forEach(function(openSubmenu) {\n                if (openSubmenu !== submenu) openSubmenu.classList.remove(\"visible\");\n            });\n            // Alternar visibilidad del submenú actual\n            submenu.classList.toggle(\"visible\");\n        });\n    });\n    // Manejo del menú en móvil (para header y componente)\n    const menuToggle = document.querySelector(\".menu-toggle\");\n    const closeButton = document.querySelector(\".close-btn\");\n    const navUl = document.querySelector(`#${mainMenuHome ? \"main-menu-home\" : \"main-menu\"} ul`);\n    if (menuToggle && closeButton && navUl) {\n        menuToggle.addEventListener(\"click\", ()=>{\n            navUl.classList.toggle(\"is-visible\");\n            closeButton.style.display = navUl.classList.contains(\"is-visible\") ? \"block\" : \"none\"; // Mostrar/ocultar botón de cierre\n        });\n        closeButton.addEventListener(\"click\", ()=>{\n            navUl.classList.remove(\"is-visible\");\n            closeButton.style.display = \"none\"; // Oculta el botón de cierre\n        });\n    }\n    // Manejo del botón \"scroll to top\"\n    const btnScrollTop = document.getElementById(\"btn-scroll-top\");\n    if (btnScrollTop) {\n        btnScrollTop.addEventListener(\"click\", ()=>{\n            window.scrollTo({\n                top: 0,\n                behavior: \"smooth\"\n            });\n        });\n        window.addEventListener(\"scroll\", ()=>{\n            if (window.pageYOffset > 500) btnScrollTop.classList.remove(\"hidden\");\n            else btnScrollTop.classList.add(\"hidden\");\n        });\n    }\n    // Manejo del botón \"scroll to intro home\"\n    const scrollDownArrow = document.querySelector(\".scroll-down-arrow\");\n    // Verificar si el botón existe antes de agregar el event listener\n    if (scrollDownArrow) scrollDownArrow.addEventListener(\"click\", (e)=>{\n        e.preventDefault();\n        const target = document.querySelector(scrollDownArrow.getAttribute(\"href\"));\n        // Verificar si el destino existe antes de hacer scroll\n        if (target) target.scrollIntoView({\n            behavior: \"smooth\"\n        });\n    });\n});\n\n//# sourceMappingURL=index.5d70f390.js.map\n","document.addEventListener('DOMContentLoaded', () => {\n  // Obtener la ruta actual (sin el dominio ni el query string)\n  var currentPath = window.location.pathname;\n\n  // Función para marcar el enlace actual en el menú\n  function markCurrentLink(menu) {\n    if (!menu) {\n      return; // Si el menú no existe, salir de la función\n    }\n\n    var links = menu.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkPath = new URL(links[i].href).pathname; // Obtener solo la ruta\n\n      // Normalizar y comparar las rutas\n      if (currentPath === linkPath || currentPath.endsWith(linkPath)) {\n        links[i].classList.add('current');\n      }\n    }\n  }\n\n  // Seleccionar el menú que esté disponible en la página actual\n  var mainMenuHome = document.getElementById('main-menu-home');\n  var mainMenu = document.getElementById('main-menu');\n\n  // Marcar enlaces actuales en el menú que exista\n  if (mainMenuHome) {\n    markCurrentLink(mainMenuHome);\n  } else if (mainMenu) {\n    markCurrentLink(mainMenu);\n  }\n\n  // Marcar enlaces actuales en el footer (si aplica)\n  var footerMenu = document.getElementById('footer-menu');\n  if (footerMenu) {\n    markCurrentLink(footerMenu);\n  }\n\n  // Manejo del submenú desplegable de miembros\n  document.querySelectorAll('.toggle-submenu').forEach(function (toggle) {\n    toggle.addEventListener('click', function (e) {\n      e.preventDefault();\n      let submenu = this.nextElementSibling;\n\n      // Cerrar otros submenús si ya están abiertos\n      document.querySelectorAll('.submenu.visible').forEach(function (openSubmenu) {\n        if (openSubmenu !== submenu) {\n          openSubmenu.classList.remove('visible');\n        }\n      });\n\n      // Alternar visibilidad del submenú actual\n      submenu.classList.toggle('visible');\n    });\n  });\n\n  // Manejo del menú en móvil (para header y componente)\n  const menuToggle = document.querySelector('.menu-toggle');\n  const closeButton = document.querySelector('.close-btn');\n  const navUl = document.querySelector(`#${mainMenuHome ? 'main-menu-home' : 'main-menu'} ul`);\n\n  if (menuToggle && closeButton && navUl) {\n    menuToggle.addEventListener('click', () => {\n      navUl.classList.toggle('is-visible');\n      closeButton.style.display = navUl.classList.contains('is-visible') ? 'block' : 'none'; // Mostrar/ocultar botón de cierre\n    });\n\n    closeButton.addEventListener('click', () => {\n      navUl.classList.remove('is-visible');\n      closeButton.style.display = 'none'; // Oculta el botón de cierre\n    });\n  }\n\n  // Manejo del botón \"scroll to top\"\n  const btnScrollTop = document.getElementById(\"btn-scroll-top\");\n  if (btnScrollTop) {\n    btnScrollTop.addEventListener(\"click\", () => {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    });\n\n    window.addEventListener(\"scroll\", () => {\n      if (window.pageYOffset > 500) {\n        btnScrollTop.classList.remove(\"hidden\");\n      } else {\n        btnScrollTop.classList.add(\"hidden\");\n      }\n    });\n  }\n\n  // Manejo del botón \"scroll to intro home\"\n  const scrollDownArrow = document.querySelector('.scroll-down-arrow');\n\n  // Verificar si el botón existe antes de agregar el event listener\n  if (scrollDownArrow) {\n    scrollDownArrow.addEventListener('click', (e) => {\n      e.preventDefault();\n      const target = document.querySelector(scrollDownArrow.getAttribute('href'));\n\n      // Verificar si el destino existe antes de hacer scroll\n      if (target) {\n        target.scrollIntoView({ behavior: 'smooth' });\n      }\n    });\n  }\n});\n"],"names":["document","addEventListener","currentPath","window","location","pathname","markCurrentLink","menu","links","getElementsByTagName","i","length","linkPath","URL","href","endsWith","classList","add","mainMenuHome","getElementById","mainMenu","footerMenu","querySelectorAll","forEach","toggle","e","preventDefault","submenu","nextElementSibling","openSubmenu","remove","menuToggle","querySelector","closeButton","navUl","style","display","contains","btnScrollTop","scrollTo","top","behavior","pageYOffset","scrollDownArrow","target","getAttribute","scrollIntoView"],"version":3,"file":"index.5d70f390.js.map"}