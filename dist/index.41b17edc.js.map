{"mappings":"AAAA,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,6DAA6D;IAC7D,IAAI,cAAc,OAAO,QAAQ,CAAC,QAAQ;IAE1C,kDAAkD;IAClD,SAAS,gBAAgB,IAAI;QAC3B,IAAI,CAAC,MACH,QAAQ,4CAA4C;QAGtD,IAAI,QAAQ,KAAK,oBAAoB,CAAC;QAEtC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,IAAI,WAAW,IAAI,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,uBAAuB;YAEvE,kCAAkC;YAClC,IAAI,gBAAgB,YAAY,YAAY,QAAQ,CAAC,WACnD,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC;QAE3B;IACF;IAEA,8DAA8D;IAC9D,IAAI,eAAe,SAAS,cAAc,CAAC;IAC3C,IAAI,WAAW,SAAS,cAAc,CAAC;IAEvC,gDAAgD;IAChD,IAAI,cACF,gBAAgB;SACX,IAAI,UACT,gBAAgB;IAGlB,mDAAmD;IACnD,IAAI,aAAa,SAAS,cAAc,CAAC;IACzC,IAAI,YACF,gBAAgB;IAGlB,6CAA6C;IAC7C,SAAS,gBAAgB,CAAC,mBAAmB,OAAO,CAAC,SAAU,MAAM;QACnE,OAAO,gBAAgB,CAAC,SAAS,SAAU,CAAC;YAC1C,EAAE,cAAc;YAChB,IAAI,UAAU,IAAI,CAAC,kBAAkB;YAErC,6CAA6C;YAC7C,SAAS,gBAAgB,CAAC,oBAAoB,OAAO,CAAC,SAAU,WAAW;gBACzE,IAAI,gBAAgB,SAClB,YAAY,SAAS,CAAC,MAAM,CAAC;YAEjC;YAEA,0CAA0C;YAC1C,QAAQ,SAAS,CAAC,MAAM,CAAC;QAC3B;IACF;IAEA,sDAAsD;IACtD,MAAM,aAAa,SAAS,aAAa,CAAC;IAC1C,MAAM,cAAc,SAAS,aAAa,CAAC;IAC3C,MAAM,QAAQ,SAAS,aAAa,CAAC,CAAC,CAAC,EAAE,eAAe,mBAAmB,YAAY,GAAG,CAAC;IAE3F,IAAI,cAAc,eAAe,OAAO;QACtC,WAAW,gBAAgB,CAAC,SAAS;YACnC,MAAM,SAAS,CAAC,MAAM,CAAC;YACvB,YAAY,KAAK,CAAC,OAAO,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,gBAAgB,UAAU,QAAQ,kCAAkC;QAC3H;QAEA,YAAY,gBAAgB,CAAC,SAAS;YACpC,MAAM,SAAS,CAAC,MAAM,CAAC;YACvB,YAAY,KAAK,CAAC,OAAO,GAAG,QAAQ,4BAA4B;QAClE;IACF;IAEA,mCAAmC;IACnC,MAAM,eAAe,SAAS,cAAc,CAAC;IAC7C,IAAI,cAAc;QAChB,aAAa,gBAAgB,CAAC,SAAS;YACrC,OAAO,QAAQ,CAAC;gBACd,KAAK;gBACL,UAAU;YACZ;QACF;QAEA,OAAO,gBAAgB,CAAC,UAAU;YAChC,IAAI,OAAO,WAAW,GAAG,KACvB,aAAa,SAAS,CAAC,MAAM,CAAC;iBAE9B,aAAa,SAAS,CAAC,GAAG,CAAC;QAE/B;IACF;IAEA,0CAA0C;IAC1C,MAAM,kBAAkB,SAAS,aAAa,CAAC;IAE/C,kEAAkE;IAClE,IAAI,iBACF,gBAAgB,gBAAgB,CAAC,SAAS,CAAC;QACzC,EAAE,cAAc;QAChB,MAAM,SAAS,SAAS,aAAa,CAAC,gBAAgB,YAAY,CAAC;QAEnE,uDAAuD;QACvD,IAAI,QACF,OAAO,cAAc,CAAC;YAAE,UAAU;QAAS;IAE/C;IAGF,IAAI,IAAI;AAEV","sources":["src/assets/js/script.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  // Obtener la ruta actual (sin el dominio ni el query string)\n  var currentPath = window.location.pathname;\n\n  // Función para marcar el enlace actual en el menú\n  function markCurrentLink(menu) {\n    if (!menu) {\n      return; // Si el menú no existe, salir de la función\n    }\n\n    var links = menu.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkPath = new URL(links[i].href).pathname; // Obtener solo la ruta\n\n      // Normalizar y comparar las rutas\n      if (currentPath === linkPath || currentPath.endsWith(linkPath)) {\n        links[i].classList.add('current');\n      }\n    }\n  }\n\n  // Seleccionar el menú que esté disponible en la página actual\n  var mainMenuHome = document.getElementById('main-menu-home');\n  var mainMenu = document.getElementById('main-menu');\n\n  // Marcar enlaces actuales en el menú que exista\n  if (mainMenuHome) {\n    markCurrentLink(mainMenuHome);\n  } else if (mainMenu) {\n    markCurrentLink(mainMenu);\n  }\n\n  // Marcar enlaces actuales en el footer (si aplica)\n  var footerMenu = document.getElementById('footer-menu');\n  if (footerMenu) {\n    markCurrentLink(footerMenu);\n  }\n\n  // Manejo del submenú desplegable de miembros\n  document.querySelectorAll('.toggle-submenu').forEach(function (toggle) {\n    toggle.addEventListener('click', function (e) {\n      e.preventDefault();\n      let submenu = this.nextElementSibling;\n\n      // Cerrar otros submenús si ya están abiertos\n      document.querySelectorAll('.submenu.visible').forEach(function (openSubmenu) {\n        if (openSubmenu !== submenu) {\n          openSubmenu.classList.remove('visible');\n        }\n      });\n\n      // Alternar visibilidad del submenú actual\n      submenu.classList.toggle('visible');\n    });\n  });\n\n  // Manejo del menú en móvil (para header y componente)\n  const menuToggle = document.querySelector('.menu-toggle');\n  const closeButton = document.querySelector('.close-btn');\n  const navUl = document.querySelector(`#${mainMenuHome ? 'main-menu-home' : 'main-menu'} ul`);\n\n  if (menuToggle && closeButton && navUl) {\n    menuToggle.addEventListener('click', () => {\n      navUl.classList.toggle('is-visible');\n      closeButton.style.display = navUl.classList.contains('is-visible') ? 'block' : 'none'; // Mostrar/ocultar botón de cierre\n    });\n\n    closeButton.addEventListener('click', () => {\n      navUl.classList.remove('is-visible');\n      closeButton.style.display = 'none'; // Oculta el botón de cierre\n    });\n  }\n\n  // Manejo del botón \"scroll to top\"\n  const btnScrollTop = document.getElementById(\"btn-scroll-top\");\n  if (btnScrollTop) {\n    btnScrollTop.addEventListener(\"click\", () => {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    });\n\n    window.addEventListener(\"scroll\", () => {\n      if (window.pageYOffset > 500) {\n        btnScrollTop.classList.remove(\"hidden\");\n      } else {\n        btnScrollTop.classList.add(\"hidden\");\n      }\n    });\n  }\n\n  // Manejo del botón \"scroll to intro home\"\n  const scrollDownArrow = document.querySelector('.scroll-down-arrow');\n\n  // Verificar si el botón existe antes de agregar el event listener\n  if (scrollDownArrow) {\n    scrollDownArrow.addEventListener('click', (e) => {\n      e.preventDefault();\n      const target = document.querySelector(scrollDownArrow.getAttribute('href'));\n\n      // Verificar si el destino existe antes de hacer scroll\n      if (target) {\n        target.scrollIntoView({ behavior: 'smooth' });\n      }\n    });\n  }\n\n  AOS.init();\n\n});\n"],"names":[],"version":3,"file":"index.41b17edc.js.map","sourceRoot":"/__parcel_source_root/"}